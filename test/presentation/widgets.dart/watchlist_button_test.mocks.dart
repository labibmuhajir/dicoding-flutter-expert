// Mocks generated by Mockito 5.0.8 from annotations
// in ditonton/test/presentation/widgets.dart/watchlist_button_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;
import 'dart:ui' as _i12;

import 'package:ditonton/common/state_enum.dart' as _i8;
import 'package:ditonton/domain/entities/content_data.dart' as _i10;
import 'package:ditonton/domain/entities/id_and_data_type.dart' as _i11;
import 'package:ditonton/domain/entities/id_poster_title_overview.dart' as _i7;
import 'package:ditonton/domain/usecases/get_watchlist_movies.dart' as _i2;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i3;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i5;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i4;
import 'package:ditonton/presentation/provider/watchlist_notifier.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeGetWatchlist extends _i1.Fake implements _i2.GetWatchlist {}

class _FakeGetWatchListStatus extends _i1.Fake
    implements _i3.GetWatchListStatus {}

class _FakeSaveWatchlist extends _i1.Fake implements _i4.SaveWatchlist {}

class _FakeRemoveWatchlist extends _i1.Fake implements _i5.RemoveWatchlist {}

/// A class which mocks [WatchlistNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistNotifier extends _i1.Mock implements _i6.WatchlistNotifier {
  MockWatchlistNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetWatchlist get getWatchlist =>
      (super.noSuchMethod(Invocation.getter(#getWatchlist),
          returnValue: _FakeGetWatchlist()) as _i2.GetWatchlist);
  @override
  _i3.GetWatchListStatus get getWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatus),
          returnValue: _FakeGetWatchListStatus()) as _i3.GetWatchListStatus);
  @override
  _i4.SaveWatchlist get saveWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlist),
          returnValue: _FakeSaveWatchlist()) as _i4.SaveWatchlist);
  @override
  _i5.RemoveWatchlist get removeWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlist),
          returnValue: _FakeRemoveWatchlist()) as _i5.RemoveWatchlist);
  @override
  List<_i7.IdPosterTitleOverview> get watchlist =>
      (super.noSuchMethod(Invocation.getter(#watchlist),
              returnValue: <_i7.IdPosterTitleOverview>[])
          as List<_i7.IdPosterTitleOverview>);
  @override
  _i8.RequestState get watchlistState =>
      (super.noSuchMethod(Invocation.getter(#watchlistState),
          returnValue: _i8.RequestState.Empty) as _i8.RequestState);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i9.Future<void> fetchWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#fetchWatchlistMovies, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> addWatchlist(_i10.ContentData? contentData) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [contentData]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> removeFromWatchlist(_i11.IdAndDataType? idAndDataType) =>
      (super.noSuchMethod(
          Invocation.method(#removeFromWatchlist, [idAndDataType]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> loadWatchlistStatus(_i11.IdAndDataType? idAndDataType) =>
      (super.noSuchMethod(
          Invocation.method(#loadWatchlistStatus, [idAndDataType]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
